@using InvoicingAppl.Models

@model InvoicingViewModel

@{
    ViewBag.Title = "InvoicePage";
}

<h2>InvoicePage</h2>
@switch ((InvoiceFormType)ViewBag.InvoiceFormScope)
{
    case InvoiceFormType.Add:
        ViewBag.Title = "Add Invoice";
        ViewBag.SubmitValue = "Add Invoice";
        break;

    case InvoiceFormType.Edit:
        ViewBag.Title = "Edit Invoice";
        ViewBag.SubmitValue = "Save Invoice";
        break;

    default:
        ViewBag.Title = "Invoice";
        break;

}

<h2>@ViewBag.Title</h2>

<div>
    @using (Html.BeginForm())
    {
        <div>
            @Html.HiddenFor(m => m.Id)
        </div>

        <div class="form-group">
            <label>Client Name</label>
            @Html.TextBoxFor(m => m.ClientName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ClientName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label>Client Address</label>
            @Html.TextBoxFor(m => m.ClientAddress, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ClientAddress, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label>Product Name</label>
            @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ProductName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label>Product Quantity</label>
            @Html.TextBoxFor(m => m.ProdQuantity, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ProdQuantity, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label>Unit Price</label>
            @Html.TextBoxFor(m => m.UnitPrice, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.UnitPrice, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label>Currency</label>
            @Html.EnumDropDownListFor(m => m.Currency, "Please select a currency", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Currency, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label>Shipping Date</label>
            @Html.TextBoxFor(m => m.ShipDate, new { @class = "form-control", type = "date" })
            @Html.ValidationMessageFor(m => m.ShipDate, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label>Payment Due Date</label>
            @Html.TextBoxFor(m => m.PaymentDueDate, new { @class = "form-control", type = "date" })
            @Html.ValidationMessageFor(m => m.PaymentDueDate, "", new { @class = "text-danger" })
        </div>


    if (ViewBag.InvoiceFormScope == InvoiceFormType.Edit)
    {
        <div class="form-group">
            <label>Subtotal</label>
            @Html.TextBoxFor(m => m.SubTotal, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.SubTotal, "", new { @class = "text-danger" })
        </div>

                <div class="form-group">
                    <label>Taxes</label>
                    @Html.TextBoxFor(m => m.Tax, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.Tax, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Total</label>
                    @Html.TextBoxFor(m => m.Total, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.Total, "", new { @class = "text-danger" })
                </div>
    }

    <input type="submit" name=@ViewBag.InvoiceFormScope value=@ViewBag.SubmitValue class="btn btn-success" />

        if (ViewBag.InvoiceFormScope == InvoiceFormType.Edit)
        {
            @Html.Hidden("InvoiceId", Model.Id)
            <input type="submit" name="SubmitPaid" value="Paid" formaction="/Invoicing/InvoicePaid" class="btn btn-danger" />
        }
    }
</div>



